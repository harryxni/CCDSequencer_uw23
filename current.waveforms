; Waveform tables and definitions for the LBNL CCD
; This is for a slow, low noise readout
; In this version the reset encloses the three serial clocks
; sg 2006-02-02 FS clocks removed, lower levels redefined to 0V (was -3V)
;**********************************************************************
Vmax	EQU    +12.4		; ARC32 clock driver board max. voltage

; Miscellaneous definitions
VIDEO           EQU     $000000 ; Video processor board select = 0
CLK2            EQU     $002000 ; Clock driver board select = 2
CLK3            EQU     $003000 ; Clock driver board select = 3
NS_CLR		EQU	2180    ;1120	; Horizontal clocks to clear
NP_CLR		EQU	2210    ;4100	; Parallel clocks to clear

I_DELAY 	EQU     $B00000 ; Integration period (was 83, changed to 87 on 5/9/07)

; Delay numbers for clocking
P_DELAY         EQU     $C80000 ; Parallel clock delay ($88 looked bad)
R_DELAY         EQU     $0C0000 ; Serial register transfer delay

;30 KHz waveforms
S_DELAY         EQU     $060000 ; Serial register skipping delay
SW_DELAY        EQU     $0C0000 ; Sum_well  clock delay = 96*20+80 = 2000 ns

;98 KHz clocking wavefors
PRE_SET_DLY     EQU     $0c0000 ; 96*20+80 = 2us
POST_SET_DLY    EQU     $0c0000 ; (was $2e = 1us)
DCRST_DELAY     EQU     $030000 ; settling time (was 03, changed to 43 on 7/11/07)

; Macros to help getting from volts to bits.

VDEF    MACRO   NAME,BRDTYP,BRDNUM,DAC,ALO,AHI

LO_\NAME        EQU     ALO
HI_\NAME        EQU     AHI
DAC_\NAME       EQU     DAC
BRDNUM_\NAME    EQU     BRDNUM
        IF      @SCP("BRDTYP",'VID')
BRDTYP_\NAME    EQU     3
        ELSE
BRDTYP_\NAME    EQU     0
        ENDIF

        MSG     'Defining voltage ',"NAME",' type ',"BRDTYP",' board ',"BRDNUM",' dac ',"DAC",' with limits ',"ALO",' ',"AHI"
        ENDM

VOLTS   MACRO   NAME,F

DUMMY   SET     @CVI(@MIN(4095,@MAX(0,(F-LO_\NAME)/(HI_\NAME-LO_\NAME)*4096.)))
DUMMY2  SET     @CVI((BRDNUM_\NAME<<20)|(BRDTYP_\NAME<<18)|(DAC_\NAME<<14)|DUMMY)
        DC      DUMMY2
        MSG     'Setting voltage ',"NAME ","F",'V ',DUMMY
        ENDM

;*********************************************************************
        ; define video board voltage symbols
; !! Temp !!        VDEF    INOFFA,VID,0,0,-10.0,10.0
; sg 2007-5-18 output offset is the name (in the ARC45 user manual) for signal A/D-BIAS-A in the
; ARC45 schematic PDF file
;        VDEF    OUTOFFA,VID,0,1,-10.0,10.0
; !! Temp !!        VDEF    INOFFB,VID,0,2,-10.0,10.0
; !! Temp !!        VDEF    OUTOFFB,VID,0,3,-10.0,10.0


; Define switch state bits for the CCD clocks of the LBNL CCD
;Bank 0
V1L     EQU     0
V1H     EQU     $1
V2L     EQU     0       ; VERTICAL register, phase #2
V2H     EQU     $2      ; was $2
V3L     EQU     0       ; VERTICAL register, phase #3
V3H     EQU     $4      ; was $4
FS1L    EQU     0
FS1H    EQU     0       ; was $8
FS2L    EQU     0
FS2H    EQU     0       ; was $10
FS3L    EQU     0
FS3H    EQU     0       ; was $20


TL      EQU     0       ; Transfer gate
TH      EQU     $c0     ; both transfer gates concurrently


; 3/30/2011 OS switching: "never got it to work"  as per juan via r.a.
; so what they do is switch h1 and h3 
; reading to the left then the hi's going down  should be 1, 2, 4, 8, 10, 20, c0, 300, 400
; reading to the right then 4 and 8 get reversed  to 8 , 4 going down.
; (will try to get it to work...) r.a.
;Bank 1
HU1L    EQU     0
HU1H    EQU     $001    ;was $001
HU2L    EQU     0
HU2H    EQU     $002    ;was $002
HU3L    EQU     0
HU3H    EQU     $004   ;was $004
HL1L    EQU     0       ; Serial shift register, phase #1
HL1H    EQU     $008  ; was $008
HL2L    EQU     0       ; Serial shift register, phase #2
HL2H    EQU     $010     ; was $010
HL3L    EQU     0       ; Serial shift register, phase #3
HL3H    EQU     $020    ;was $020
WL      EQU     0       ; Both summing wells clocked together
WH      EQU     $8c0     ; was $0c0   8c0 is pins 19, (ox40) 33, (0x80) and 37 (0x800) together.  33 does not work on the new crate.
RL      EQU     0       ; Reset both output nodes
RH      EQU     $300
TCLL    EQU     0
TCLH    EQU     $400    ; test clock


;  ***  Definitions for Y: memory waveform tables  *****
; Clock the Parallel clocks : I1->I2->I3, always
PARALLEL
        DC      PARALLEL_CLEAR-PARALLEL-1
        DC      CLK3+$000000+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2L+V3H+TL      ;
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3L+V1H+V2L+V3L+TL      ; 3 low
        DC      CLK2+P_DELAY+FS1H+FS2H+FS3L+V1H+V2H+V3L+TL      ; 2 hi
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3L+V1L+V2H+V3L+TL      ; 1 low
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3H+V1L+V2H+V3H+TL      ; 3 hi
        DC      CLK2+P_DELAY+FS1L+FS2L+FS3H+V1L+V2L+V3H+TH      ; shut TG, 2 lo

PARALLEL_CLEAR
        DC      P_PARAL-PARALLEL_CLEAR-1
        DC      CLK3+$000000+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2L+V3H+TL
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3L+V1H+V2L+V3L+TL
        DC      CLK2+P_DELAY+FS1H+FS2H+FS3L+V1H+V2H+V3L+TL
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3L+V1L+V2H+V3L+TL       
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3H+V1L+V2H+V3H+TL      
        DC      CLK2+P_DELAY+FS1L+FS2L+FS3H+V1L+V2L+V3H+TH      ; shut TG 
        
P_PARAL DC      P_PARAL_INV-P_PARAL-1
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2L+V3H+TH
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3L+V1H+V2L+V3L+TH
        DC      CLK2+P_DELAY+FS1H+FS2H+FS3L+V1H+V2H+V3L+TH
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3L+V1L+V2H+V3L+TH       
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3H+V1L+V2H+V3H+TH
        DC      CLK2+P_DELAY+FS1L+FS2L+FS3H+V1L+V2L+V3H+TH      ; shut TG 

P_PARAL_INV
        DC      P_EPER-P_PARAL_INV-1
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2L+V3H+TH
        DC      CLK2+P_DELAY+FS1L+FS2L+FS3H+V1L+V2L+V3H+TH
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3H+V1L+V2H+V3H+TH
        DC      CLK2+P_DELAY+FS1L+FS2H+FS3L+V1L+V2H+V3L+TH       
        DC      CLK2+P_DELAY+FS1H+FS2H+FS3L+V1H+V2H+V3L+TH
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3L+V1H+V2L+V3L+TH      ; shut TG 

P_EPER  DC      END_P_EPER-P_EPER-1
        DC      CLK3+$000000+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2L+V3H+TL      ; or V clocking
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1L+V2L+V3H+TL      ; upwards
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1L+V2H+V3H+TL
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1L+V2H+V3L+TL       
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2H+V3L+TL
        DC      CLK2+P_DELAY+FS1H+FS2L+FS3H+V1H+V2L+V3L+TH      ; shut TG 
END_P_EPER 
        DC 0

; Video processor bit definition
;            xfer, A/D, integ, Pol+, Pol-, DCrestore, rst   (1 => switch open)
; Both amps is H1->H2->H3
; L amp is H1->H2->H3
; U amp is H3->H2->H1

SERIAL_IDLE     ; Clock serial charge from both L and R ends
        DC      END_SERIAL_IDLE-SERIAL_IDLE-1
        DC      VIDEO+$000000+%1110100  ; ADCLatch,NonInv,DCRestore,StrtRstInt.

        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo,Reset_On
        DC      CLK3+S_DELAY+RL+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h1->lo
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3H+HL1L+HL2H+HL3H+WL ;h2->hi
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->lo
        DC      CLK3+S_DELAY+RL+HU1H+HU2H+HU3L+HL1H+HL2H+HL3L+WL ;h1->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3L+HL1H+HL2L+HL3L+WL ;h2->lo
        DC      CLK3+PRE_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;h3->hi,Delay


        DC      CLK3+$000000+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;dummy for transmit delay
        DC      VIDEO+$000000+%1110111  ; StopDCRestore and StopResetIntegrator 
        DC      VIDEO+I_DELAY+%0000111  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; Stop Integrate and sel inverting int.
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH ;SW->hi 
        DC      CLK3+POST_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo
        DC      VIDEO+I_DELAY+%0001011  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; StopIntegrator
        DC      VIDEO+DCRST_DELAY+%1110111      ; ADCLatch,NonInv  ;mF to do ADC sampling before resetting
END_SERIAL_IDLE


;start binning waveforms
CCD_RESET       ;Used for binning only
        DC      SERIAL_CLOCK_L-CCD_RESET-1

SERIAL_CLOCK_L  ;"NORMAL" clocking
        DC      SERIAL_CLOCK_R-SERIAL_CLOCK_L-1
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;h3->lo,SW->lo,Reset_On
        DC      CLK3+S_DELAY+RH+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h2->hi
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3H+HL1L+HL2H+HL3H+WL ;h1->lo
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->hi
        DC      CLK3+S_DELAY+RH+HU1H+HU2H+HU3L+HL1H+HL2H+HL3L+WL ;h2->lo
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3L+HL1H+HL2L+HL3L+WL ;h1->hi
        DC      CLK3+PRE_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_Off+Delay

SERIAL_CLOCK_R  ;"REVERSE" clocking
        DC      SERIAL_CLOCK_LR-SERIAL_CLOCK_R-1

SERIAL_CLOCK_LR ;"SPLIT" clocking
        DC      VIDEO_PROCESS-SERIAL_CLOCK_LR-1

VIDEO_PROCESS
        DC      END_VIDEO-VIDEO_PROCESS-1
SXMIT   DC      $00F000                 ; Transmit A/D data to host
END_VIDEO

;end binning waveforms

; The fast serial code with the circulating address register must start
;   on a boundary that is a multiple of the address register modulus.

; Video processor bit definition
;            xfer, A/D, integ, Pol+, Pol-, DCrestore, rst   (1 => switch open)

; These are the three reading tables. Make sure they're all the same length
SERIAL_TEST
        DC      END_SERIAL_TEST-SERIAL_TEST-1
        DC      CLK3+S_DELAY+RH+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h2->hi
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h2->hi
END_SERIAL_TEST
; switch the two polarity bits (3rd and 4th from the right000xx00) in all VIDEO words
SERIAL_READ_L
        DC      END_SERIAL_READ_L-SERIAL_READ_L-1
        DC      VIDEO+$000000+%1110100  ; NonInv,DCRestore,StrtRstInt.
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_On
        DC      CLK3+S_DELAY+RL+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h1->lo, Reset_off
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3H+HL1L+HL2H+HL3H+WL ;h2->hi
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->lo
        DC      CLK3+S_DELAY+RL+HU1H+HU2H+HU3L+HL1H+HL2H+HL3L+WL ;h1->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3L+HL1H+HL2L+HL3L+WL ;h2->lo
        DC      CLK3+PRE_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;h3->hi,Delay
SXL     DC      $00F000                 ; Transmit a/d data to host SELECT_OUTPUT_SOURCE overwrites this at runtime
        DC      VIDEO+$000000+%1110111  ; StopDCRestore and StopResetIntegrator 
        DC      VIDEO+I_DELAY+%0000111  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; Stop Integrate and sel inverting int.
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH       ;SW->hi
        DC      CLK3+POST_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL   ;SW->lo
        DC      VIDEO+I_DELAY+%0001011  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; StopIntegrator
        DC      VIDEO+DCRST_DELAY+%1110111      ; ADCLatch,NonInv  ;mF to do ADC sampeling bevore resetting
END_SERIAL_READ_L

SERIAL_READ_R
        DC      END_SERIAL_READ_R-SERIAL_READ_R-1
        DC      VIDEO+$000000+%1110100  ; ADCLatch,NonInv,DCRestore,StrtRstInt.
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;h3->lo,SW->lo,Reset_On
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3L+HL1H+HL2L+HL3L+WL ;h2->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2H+HU3L+HL1H+HL2H+HL3L+WL ;h1->lo
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->hi
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3H+HL1L+HL2H+HL3H+WL ;h2->lo
        DC      CLK3+S_DELAY+RL+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h1->hi
        DC      CLK3+PRE_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_Off+Delay
SXR     DC      $00F041                 ;Transmit a/d data to host SELECT_OUTPUT_SOURCE overwrites this at runtime
        DC      VIDEO+$000000+%1110111  ; StopDCRestore and StopResetIntegrator
        DC      VIDEO+I_DELAY+%0000111  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; Stop Integrate and sel inverting int.
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH ;SW->hi
        DC      CLK3+POST_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo
        DC      VIDEO+I_DELAY+%0001011  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; StopResetIntegrator
        DC      VIDEO+DCRST_DELAY+%1110111      ; ADCLatch,NonInv  ;mF to do ADC sampeling bevore resetting
END_SERIAL_READ_R

SERIAL_READ_LR
        DC      END_SERIAL_READ_LR-SERIAL_READ_LR-1
        DC      VIDEO+$000000+%1110100  ; ADCLatch,NonInv,DCRestore,StrtRstInt.
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;h3->lo,SW->lo,Reset_On
        DC      CLK3+S_DELAY+RL+HU1L+HU2L+HU3H+HL1H+HL2L+HL3L+WL ;h2->hi
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3H+HL1H+HL2H+HL3L+WL ;h1->lo
        DC      CLK3+S_DELAY+RL+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2H+HU3L+HL1L+HL2H+HL3H+WL ;h2->lo
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3L+HL1L+HL2L+HL3H+WL ;h1->hi
        DC      CLK3+PRE_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_Off+Delay
SXRL    DC      $00F040                 ;Transmit a/d data to host SELECT_OUTPUT_SOURCE overwrites this at runtime
        DC      VIDEO+$000000+%1110111  ; StopDCRestore and StopResetIntegrator
        DC      VIDEO+I_DELAY+%0000111  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; Stop Integrate and sel inverting int.
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH ;SW->hi
        DC      CLK3+POST_SET_DLY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;SW->lo
        DC      VIDEO+I_DELAY+%0001011  ; Integrate for I_DELAY microsec
        DC      VIDEO+$000000+%0011011  ; StopResetIntegrator
        DC      VIDEO+DCRST_DELAY+%1110111      ; ADCLatch,NonInv  ;mF to do ADC sampeling bevore resetting
END_SERIAL_READ_LR

; These are the three skipping tables. Make sure they're all the same length
SERIAL_SKIP_L           ; Serial clocking waveform for skipping left
        DC	END_SERIAL_SKIP_L-SERIAL_SKIP_L-1
        DC      VIDEO+$000000+%1110100  ; Change nearly everything
        DC      CLK3+S_DELAY+RH+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h2->hi
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3H+HL1L+HL2H+HL3H+WL ;h1->lo
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->hi
        DC      CLK3+S_DELAY+RH+HU1H+HU2H+HU3L+HL1H+HL2H+HL3L+WL ;h2->lo
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3L+HL1H+HL2L+HL3L+WL ;h1->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_Off+Delay
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH ;SW->hi 
END_SERIAL_SKIP_L

SERIAL_SKIP_R           ; Serial clocking waveform for skipping right
        DC	END_SERIAL_SKIP_R-SERIAL_SKIP_R-1
        DC      VIDEO+$000000+%1110100  ; Change nearly everything
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3L+HL1H+HL2L+HL3L+WL ;h2->hi
        DC      CLK3+S_DELAY+RH+HU1H+HU2H+HU3L+HL1H+HL2H+HL3L+WL ;h1->lo
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->hi
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3H+HL1L+HL2H+HL3H+WL ;h2->lo
        DC      CLK3+S_DELAY+RH+HU1L+HU2L+HU3H+HL1L+HL2L+HL3H+WL ;h1->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_Off+Delay
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH ;SW->hi 
END_SERIAL_SKIP_R

SERIAL_SKIP_LR          ; Serial clocking waveform for skipping both ends
        DC	END_SERIAL_SKIP_LR-SERIAL_SKIP_LR-1
        DC      VIDEO+$000000+%1110100  ; Change nearly everything
        DC      CLK3+S_DELAY+RH+HU1H+HU2L+HU3L+HL1L+HL2L+HL3H+WL ;h2->hi
        DC      CLK3+S_DELAY+RH+HU1H+HU2H+HU3L+HL1L+HL2H+HL3H+WL ;h1->lo
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3L+HL1L+HL2H+HL3L+WL ;h3->hi
        DC      CLK3+S_DELAY+RH+HU1L+HU2H+HU3H+HL1H+HL2H+HL3L+WL ;h2->lo
        DC      CLK3+S_DELAY+RH+HU1L+HU2L+HU3H+HL1H+HL2L+HL3L+WL ;h1->hi
        DC      CLK3+S_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WL ;Reset_Off+Delay
        DC      CLK3+SW_DELAY+RL+HU1H+HU2L+HU3H+HL1H+HL2L+HL3H+WH ;SW->hi
END_SERIAL_SKIP_LR

;brought in and guestafied 4/7/2011 r.a.
PARALLELS_DURING_EXPOSURE
	DC	END_PARALLELS_DURING_EXPOSURE-PARALLELS_DURING_EXPOSURE-1
	DC	CLK3+0000000+00+00+V3H+FS3H+TH	;   during exposure
END_PARALLELS_DURING_EXPOSURE

;brought in and guestafied for new roi code in the 8.1misc.asm code r.a. 8/21/2011
PARALLELS_DURING_READOUT
	DC	END_PARALLELS_DURING_READOUT-PARALLELS_DURING_READOUT-1
	DC	CLK3+P_DELAY+V1H+00+V3H+FS1H+FS2L+FS3H+TH     ;tg>th added fs*h/L to this.. right? r.a.
END_PARALLELS_DURING_READOUT

; persistent image erase voltage tables
; Removed 11/7/05 at UM
VSUBN
        
ERHI    DC EREND-ERHI-1

EREND   DC EREND2-EREND-1
          
EREND2

; Bias voltages for the LBL CCD
BZERO           EQU     7.5     ; Zero Bias
Vsub            EQU     30.0    ; Substrate Voltage
OutDrain        EQU     -10.0   ; Output Drain
OutGate         EQU     3.50    ; Output Gate (was 2.16)
RstDrain        EQU     -10.0   ; Reset Drain
Btest           EQU     0.5     ; bias test voltage

; Define high and low clock levels
CK_ZERO         EQU     0.0
VCLK_HI         EQU     5.0
VCLK_LO         EQU     -3.0
HCLK_HI         EQU     8.0 ; was 8.0
HCLK_LO         EQU     -4.0 ; was -4.0
TGATE_HI        EQU     5.0
TGATE_LO        EQU     -3.0
SWELL_HI        EQU     4.5  ; was 4.5
SWELL_LO        EQU     -4.5 ; was -4.5
RGATE_HI        EQU     -6.0     ; -6.0 Reset ACTIVE wrong polarity....
RGATE_LO        EQU     0.0      ; Reset INACTIVE (from LBL - brownmg 11/7/05)
TCLK_LO         EQU     .0
TCLK_HI         EQU     0.1

; Initialization of clock driver and video processor DACs and switches
DACS    DC      END_DACS-DACS-1

; Set gain and integrator speed. x 1 gain, FAST integrate
        DC      $0c3cbb                 ; Gain, integrate speed, board #0

; Input offset voltages for DC coupling. Target is U4#6 = 24 volts
; This voltage is not used since we use AC coupling
; !! Temp !!        VOLTS   INOFFA,0.0              ; Input offset, ch. A
; sg 2007-5-18 enable output offset voltage; but maybe the macro stuff doesn't work
;     VOLTS   OUTOFFA,-9.9            ; Output video offset, ch. A

; Output offset voltages to get around 1000 DN A/D units on a dark frame
; !! Temp !!        VOLTS   INOFFB,0.0              ; Input offset, ch. B
; !! Temp !!        VOLTS   OUTOFFB,-2.5            ; Output video offset, ch. B
        ; sg 2006-02-02 changed FS1 to FS3 2nd (low) levels from VCLK_Lo+Vmax to Vmax
; Set the levels on the clock board
	DC	$2A0080					; DAC = unbuffered mode
	DC	$200100+@CVI((VCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #1, V1L
	DC	$200200+@CVI((VCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$200400+@CVI((VCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #2, V2L
	DC	$200800+@CVI((VCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$202000+@CVI((VCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #3, V3L
	DC	$204000+@CVI((VCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$208000+@CVI((VCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #4, FS1
	DC	$210000+@CVI((Vmax)/(2*Vmax)*255)
	DC	$220100+@CVI((VCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #5, FS2
	DC	$220200+@CVI((Vmax)/(2*Vmax)*255)
	DC	$220400+@CVI((VCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #6, FS3
	DC	$220800+@CVI((Vmax)/(2*Vmax)*255)
	DC	$222000+@CVI((TGATE_HI+Vmax)/(2*Vmax)*255)	; Pin #7, Trans Gate
	DC	$224000+@CVI((TGATE_LO+Vmax)/(2*Vmax)*255)
	DC	$228000+@CVI((TGATE_HI+Vmax)/(2*Vmax)*255)	; Pin #8, Trans Gate
	DC	$230000+@CVI((TGATE_LO+Vmax)/(2*Vmax)*255)
	DC	$240100+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)	; Pin #9, Unused
	DC	$240200+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)
	DC	$240400+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)	; Pin #10, Unused
	DC	$240800+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)
	DC	$242000+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)	; Pin #11, Unused
	DC	$244000+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)
	DC	$248000+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)	; Pin #12, Unused
	DC	$250000+@CVI((CK_ZERO+Vmax)/(2*Vmax)*255)        

	DC	$260100+@CVI((HCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #13, HU1
	DC	$260200+@CVI((HCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$260400+@CVI((HCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #14, HU2
	DC	$260800+@CVI((HCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$262000+@CVI((HCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #15, HU3
	DC	$264000+@CVI((HCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$268000+@CVI((HCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #16, HL1
	DC	$270000+@CVI((HCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$280100+@CVI((HCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #17, HL2
	DC	$280200+@CVI((HCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$280400+@CVI((HCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #18, HL3
	DC	$280800+@CVI((HCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$282000+@CVI((SWELL_HI+Vmax)/(2*Vmax)*255)	; Pin #19, Summing Well
	DC	$284000+@CVI((SWELL_LO+Vmax)/(2*Vmax)*255)
	DC	$288000+@CVI((SWELL_HI+Vmax)/(2*Vmax)*255)	; Pin #33, Summing Well  broke on dave's crate
	DC	$290000+@CVI((SWELL_LO+Vmax)/(2*Vmax)*255)
	DC	$2A0100+@CVI((RGATE_HI+Vmax)/(2*Vmax)*255)	; Pin #34, Reset Gate
	DC	$2A0200+@CVI((RGATE_LO+Vmax)/(2*Vmax)*255)
	DC	$2A0400+@CVI((RGATE_HI+Vmax)/(2*Vmax)*255)	; Pin #35, Reset Gate
	DC	$2A0800+@CVI((RGATE_LO+Vmax)/(2*Vmax)*255)
	DC	$2A2000+@CVI((TCLK_HI+Vmax)/(2*Vmax)*255)	; Pin #36, Bias test voltage
	DC	$2A4000+@CVI((TCLK_LO+Vmax)/(2*Vmax)*255)
	DC	$2A8000+@CVI((SWELL_HI+Vmax)/(2*Vmax)*255)	; Pin #37, upper SW 4 dave's crate
	DC	$2B0000+@CVI((SWELL_LO+Vmax)/(2*Vmax)*255)

; Set the voltages on the video board 25 pin connector for ARC45 video board
        DC      $0d0000+@CVI((Vsub-7.5)/22.5*4095)      ; pin 1 - Vsub
        DC      $0d4000+@CVI((BZERO-7.5)/22.5*4095)     ; pin 2
        DC      $0c0000+@CVI((BZERO-5)/15*4095)         ; pin 3
        DC      $0c4000+@CVI((BZERO-5)/15*4095)         ; pin 4
        DC      $0d8000+@CVI((BZERO-7.5)/22.5*4095)     ; pin 5
        DC      $0dc000+@CVI((BZERO-7.5)/22.5*4095)     ; pin 6
        DC      $0e0000+@CVI((OutDrain+10)/20*4095)     ; pin 9 - Reset Drain
        DC      $0e4000+@CVI((RstDrain+10)/20*4095)     ; pin 10 - Out Drain
        DC      $0e8000+@CVI((OutGate+10)/20*4095)      ; pin 11 - Out Gate
        DC      $0ec000+@CVI((BZERO+10)/20*4095)        ; pin 12
        DC      $0C8600                                 ; OUTOFFA = 000 sg 2007-05-23
END_DACS

        
      
